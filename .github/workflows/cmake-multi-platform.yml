name: CMake on multiple platforms

on:
    push:
        branches: [ develop, main ]

    pull_request:
        branches: [ develop, main ]

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
        fail-fast: false

        matrix:
            os: [ ubuntu-latest, windows-latest, macos-latest ]
            build_type: [ Release ]
            c_compiler: [ gcc, clang, cl, AppleClang ]

            include:
            - os: windows-latest
              c_compiler: cl
              cpp_compiler: cl
            - os: ubuntu-latest
              c_compiler: gcc
              cpp_compiler: g++
            - os: ubuntu-latest
              c_compiler: clang
              cpp_compiler: clang++
            - os: macos-latest
              c_compiler: AppleClang
              cpp_compiler: AppleClang

            exclude:
            - os: windows-latest
              c_compiler: gcc
            - os: windows-latest
              c_compiler: clang
            - os: windows-latest
              c_compiler: AppleClang
            - os: ubuntu-latest
              c_compiler: cl
            - os: ubuntu-latest
              c_compiler: AppleClang
            - os: macos-latest
              c_compiler: gcc
            - os: macos-latest
              c_compiler: clang
            - os: macos-latest
              c_compiler: cl

        steps:
        - uses: actions/checkout@v3
        
        - name: Set reusable strings
          id: strings
          shell: bash
          run: |
            echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

        - name: Setup for Linux only
          if: matrix.os == 'ubuntu-latest'
          run: >
            sudo apt update

        - name: Configure CMake
          run: >
            cmake -B ${{ steps.strings.outputs.build-output-dir }}
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            -S ${{ github.workspace }}
            -DEXTRAIT_BUILD_TESTS=ON

        - name: Build
          run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

        - name: Test
          working-directory: ${{ steps.strings.outputs.build-output-dir }}
          run: ctest --build-config ${{ matrix.build_type }}
