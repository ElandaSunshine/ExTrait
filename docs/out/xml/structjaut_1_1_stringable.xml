<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structjaut_1_1_stringable" kind="struct" language="C++" prot="public">
    <compoundname>jaut::Stringable</compoundname>
    <includes refid="_stringable_8h" local="no">Stringable.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structjaut_1_1_stringable_1a348369fa5a3b38e0dcae29cd3c404295" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>JAUT_NODISCARD juce::String</type>
        <definition>static JAUT_NODISCARD juce::String jaut::Stringable&lt; T &gt;::toString</definition>
        <argsstring>(const T &amp;object)</argsstring>
        <name>toString</name>
        <qualifiedname>jaut::Stringable::toString</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/Coding/cpp/ExTrait/include/extrait/Stringable.h" line="156" column="29" bodyfile="D:/Development/Coding/cpp/ExTrait/include/extrait/Stringable.h" bodystart="156" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structjaut_1_1_stringable_1ae84f754539faf90be838dd973e4d3366" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>JAUT_NODISCARD juce::String</type>
        <definition>static JAUT_NODISCARD juce::String jaut::Stringable&lt; T &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>jaut::Stringable::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/Coding/cpp/ExTrait/include/extrait/Stringable.h" line="179" column="29" bodyfile="D:/Development/Coding/cpp/ExTrait/include/extrait/Stringable.h" bodystart="179" bodyend="182"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines a customisable template specialisation provider that allows you to convert objects to juce::String. <linebreak/>
<linebreak/>
 To define your own object you need to either specialise this template for your object and a corresponding toString(const Object&amp;) static function or have a toString() method inside your object which returns a to juce::String convertible type. <linebreak/>
<linebreak/>
 You will only need to specialise your own type if the type is not implicitly convertible to juce::var or juce::String.<linebreak/>
 If no other way of representing this object was found, it will print the name of the class and its address in memory. (ns::MyClass@0x0000...) <linebreak/>
<linebreak/>
 Additionally, you can define your own way how type names should be serialised with a simple static name() function which returns a string with the name.<linebreak/>
 Otherwise it will try to derive the type name with jaut::getActualTypeName() which will try to get the name from its typeid. <linebreak/>
<linebreak/>
 The major intent behind this class is debugging and logging, but you can use it for anything you like.<linebreak/>
 Just note that, for the most part, this does not return a representation that is usable for JSON or any other parser, but instead just a visual guideline helping in printing out the most important parts of an object.<linebreak/>
 This is heavily inspired by the way Java handles these things.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The object type to convert to juce::String </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="D:/Development/Coding/cpp/ExTrait/include/extrait/Stringable.h" line="153" column="5" bodyfile="D:/Development/Coding/cpp/ExTrait/include/extrait/Stringable.h" bodystart="154" bodyend="183"/>
    <listofallmembers>
      <member refid="structjaut_1_1_stringable_1ae84f754539faf90be838dd973e4d3366" prot="public" virt="non-virtual"><scope>jaut::Stringable</scope><name>name</name></member>
      <member refid="structjaut_1_1_stringable_1a348369fa5a3b38e0dcae29cd3c404295" prot="public" virt="non-virtual"><scope>jaut::Stringable</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
