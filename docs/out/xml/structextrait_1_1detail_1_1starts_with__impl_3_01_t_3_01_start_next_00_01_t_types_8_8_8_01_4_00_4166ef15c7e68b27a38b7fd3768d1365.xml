<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structextrait_1_1detail_1_1starts_with__impl_3_01_t_3_01_start_next_00_01_t_types_8_8_8_01_4_00_4166ef15c7e68b27a38b7fd3768d1365" kind="struct" language="C++" prot="public">
    <compoundname>extrait::detail::startsWith_impl&lt; T&lt; StartNext, Types... &gt;, StartNext, StartTypes... &gt;</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">template</ref>&lt; class... &gt; <ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">class</ref></type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type><ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">class</ref> ...</type>
        <declname>StartTypes</declname>
        <defname>StartTypes</defname>
      </param>
      <param>
        <type><ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">class</ref> <ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">StartNext</ref></type>
      </param>
      <param>
        <type><ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">class</ref> ...</type>
        <declname>Types</declname>
        <defname>Types</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structextrait_1_1detail_1_1starts_with__impl_3_01_t_3_01_start_next_00_01_t_types_8_8_8_01_4_00_4166ef15c7e68b27a38b7fd3768d1365_1aaaf6b5edbde62467a609791f2cc43254" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">constexpr</ref> <ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">bool</ref></type>
        <definition>constexpr bool extrait::detail::startsWith_impl&lt; T&lt; StartNext, Types... &gt;, StartNext, StartTypes... &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>extrait::detail::startsWith_impl&lt; T&lt; StartNext, Types... &gt;, StartNext, StartTypes... &gt;::value</qualifiedname>
        <initializer>= <ref refid="structextrait_1_1detail_1_1starts_with__impl" kindref="compound">startsWith_impl</ref>&lt;<ref refid="common_8h_1a09e504879569026454b0aa254c56be04" kindref="member">T</ref>&lt;Types...&gt;, StartTypes...&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/Coding/cpp/ExTrait/include/extrait/detail/type_list_impl.h" line="162" column="31" bodyfile="D:/Development/Coding/cpp/ExTrait/include/extrait/detail/type_list_impl.h" bodystart="162" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Development/Coding/cpp/ExTrait/include/extrait/detail/type_list_impl.h" line="160" column="5" bodyfile="D:/Development/Coding/cpp/ExTrait/include/extrait/detail/type_list_impl.h" bodystart="161" bodyend="163"/>
    <listofallmembers>
      <member refid="structextrait_1_1detail_1_1starts_with__impl_3_01_t_3_01_start_next_00_01_t_types_8_8_8_01_4_00_4166ef15c7e68b27a38b7fd3768d1365_1aaaf6b5edbde62467a609791f2cc43254" prot="public" virt="non-virtual"><scope>extrait::detail::startsWith_impl&lt; T&lt; StartNext, Types... &gt;, StartNext, StartTypes... &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
